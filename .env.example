# HACS Environment Example
# Copy to `.env` (remote services) or `.env.local` (local dev overrides)

# === LLMs ===
OPENAI_API_KEY=your-openai-key
ANTHROPIC_API_KEY=your-anthropic-key
LANGSMITH_API_KEY=your-langsmith-key
LANGSMITH_PROJECT=HACS

# === Vector Stores ===
# Pick one; for local dev with docker-compose, use QDRANT_URL below
PINECONE_API_KEY=your-pinecone-key
QDRANT_URL=http://localhost:6333

# === HACS Agent/Integrations ===
HACS_API_KEY=dev_key_123
HACS_DEV_MODE=true
HACS_MCP_SERVER_URL=http://localhost:8000
HF_TOKEN=your-hf-token
UMLS_API_KEY=your-umls-key

# === Database (choose local OR remote) ===
# Local (docker-compose Postgres):
DB_PASSWORD=hacs_dev
DATABASE_URL=postgresql://hacs:${DB_PASSWORD}@localhost:5432/hacs

# Remote (e.g., Supabase):
# DATABASE_URL=postgresql://USER:PASSWORD@HOST:PORT/DB?sslmode=require
# Notes:
# - Supabase requires sslmode=require
# - Prefer pooler for app connections

# === Publishing ===
PYPI_API_TOKEN=your-pypi-token

# Guidance:
# - Use `.env` for shared/remote defaults; use `.env.local` for local-only overrides
# - The repoâ€™s docker-compose expects local DATABASE_URL format above for migrations/test
# - For docs: `docker-compose --profile docs up` (served at http://localhost:8080)