[pytest]
filterwarnings =
    ignore::DeprecationWarning
addopts = -q
markers =
    integration: marks integration tests
    unit: marks unit tests
[tool:pytest]
# Pytest configuration for HACS - Phase 3 Week 7.2 Testing Strategy
minversion = 7.0
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --durations=10
    --cov-fail-under=90
    --cov-branch
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
testpaths = tests packages
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::pytest.PytestUnknownMarkWarning
markers =
    # Test categories
    unit: Unit tests (fast, no external dependencies)
    integration: Integration tests (may require setup)
    db: Database integration tests (requires DATABASE_URL / Postgres)
    llm: Real LLM integration tests (requires OPENAI_API_KEY)
    external: Tests requiring external services (API keys, etc.)
    slow: Slow running tests
    performance: Performance/benchmark tests
    ci: Tests optimized for CI environment
    
    # Healthcare specific
    clinical: Clinical workflow tests
    fhir: FHIR compliance tests
    mcp: MCP protocol tests
    healthcare: Healthcare workflow tests
    compliance: Healthcare compliance tests
    security: Security-related tests
    
    # Package specific
    core: Tests for hacs-core package
    models: Tests for hacs-models package
    tools: Tests for hacs-tools package
    registry: Tests for hacs-registry package
    utils: Tests for hacs-utils package
    persistence: Tests for hacs-persistence package
    auth: Tests for hacs-auth package
    infrastructure: Tests for hacs-infrastructure package
    cli: Tests for hacs-cli package
    
    # Quality markers
    critical: Critical functionality tests
    regression: Regression tests
    smoke: Smoke tests for basic functionality
    
    # CI specific
    ci: CI-critical tests that must pass
    skipci: Skip in CI environment 